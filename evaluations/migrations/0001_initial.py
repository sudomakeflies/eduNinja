# Generated by Django 5.1.4 on 2025-01-29 03:27

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True)),
                ('is_latex', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='option_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Matemáticas', max_length=100)),
                ('period', models.CharField(db_index=True, default=1, max_length=10)),
                ('max_score', models.DecimalField(decimal_places=2, default=5, max_digits=5)),
                ('value_per_question', models.DecimalField(decimal_places=2, default=1, max_digits=5)),
                ('date', models.DateField(db_index=True, default=datetime.datetime.now)),
                ('llm_model', models.CharField(choices=[('ollama', 'Ollama'), ('anthropic', 'Anthropic Claude 3.5'), ('gemini', 'Gemini 2.0 flash')], default='gemini', max_length=10)),
                ('time_limit', models.DurationField(blank=True, default=datetime.timedelta(seconds=6120), help_text='Tiempo límite para la evaluación (HH:MM:SS)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='If enabled, students can take this evaluation')),
                ('enable_logs', models.BooleanField(default=True, help_text='If enabled, student activity will be logged')),
                ('course', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='evaluations.course')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('event_type', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='evaluations.evaluation')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('Technology', 'Technology'), ('Physics', 'Physics'), ('Math_Algebra', 'Math Algebra'), ('EA_MAT_9_2023_1', 'Ea Mat 9 2023 1'), ('EA_MAT_10_2023_1', 'Ea Mat 10 2023 1'), ('Math_Probability', 'Math Probability'), ('Math_Statistics', 'Math Statistics'), ('Math_Geometry', 'Math Geometry'), ('Math_Number Theory', 'Math Number Theory'), ('EA_MAT_8_2023_1', 'Ea Mat 8 2023 1'), ('Math_Calculus', 'Math Calculus'), ('Math_Trigonometry', 'Math Trigonometry'), ('EA_MAT_7_2023_1', 'Ea Mat 7 2023 1'), ('EA_MAT_11_2023_1', 'Ea Mat 11 2023 1')], db_index=True, max_length=120)),
                ('difficulty', models.CharField(choices=[('Easy', 'Fácil'), ('Medium', 'Medio'), ('Hard', 'Difícil')], db_index=True, max_length=50)),
                ('question_text', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('latex_format', models.BooleanField(default=False)),
                ('correct_answer', models.CharField(max_length=200)),
                ('options', models.ManyToManyField(to='evaluations.option')),
            ],
        ),
        migrations.AddField(
            model_name='evaluation',
            name='questions',
            field=models.ManyToManyField(to='evaluations.question'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grado', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_options', models.JSONField(blank=True, default=list, null=True, verbose_name='Lista de respuestas')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('feedback_check', models.BooleanField(default=False)),
                ('submission_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('attempts', models.PositiveSmallIntegerField(default=1)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='evaluations.evaluation')),
            ],
            options={
                'unique_together': {('evaluation', 'student')},
            },
        ),
    ]
