# Generated by Django 5.1.4 on 2025-01-31 01:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('evaluations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('context', models.JSONField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_student', models.BooleanField(default=True)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='personalized_learning.chatsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_competencies', to='personalized_learning.competency')),
            ],
            options={
                'verbose_name_plural': 'competencies',
            },
        ),
        migrations.CreateModel(
            name='CompetencyAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('llm_feedback', models.TextField(blank=True)),
                ('recommendations', models.JSONField(blank=True, null=True)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.competency')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_assessments', to='evaluations.evaluation')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Competency Assessment',
                'verbose_name_plural': 'Competency Assessments',
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_level', models.IntegerField(default=100)),
                ('current_level', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('adaptive_recommendations', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.competency')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chatsession',
            name='learning_path',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.learningpath'),
        ),
        migrations.CreateModel(
            name='LearningResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('content_type', models.CharField(choices=[('MD', 'Markdown'), ('VID', 'Video'), ('PDF', 'PDF'), ('QUIZ', 'Quiz'), ('PROJ', 'Project')], max_length=4)),
                ('content', models.TextField()),
                ('difficulty_level', models.IntegerField(default=1)),
                ('estimated_duration', models.IntegerField(help_text='Duration in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='personalized_learning.competency')),
            ],
        ),
        migrations.CreateModel(
            name='LearningActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('feedback', models.TextField(blank=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.learningpath')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.learningresource')),
            ],
            options={
                'verbose_name_plural': 'learning activities',
            },
        ),
        migrations.CreateModel(
            name='LearningStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visual_score', models.IntegerField(default=0)),
                ('auditory_score', models.IntegerField(default=0)),
                ('kinesthetic_score', models.IntegerField(default=0)),
                ('reading_score', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='learning_style', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentCompetency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=0)),
                ('last_assessed', models.DateTimeField(auto_now=True)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.competency')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competencies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'student competencies',
            },
        ),
        migrations.CreateModel(
            name='CompetencyMismatchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.CharField(max_length=200)),
                ('match_type', models.CharField(choices=[('exact', 'Exact Match'), ('fuzzy', 'Fuzzy Match'), ('wildcard', 'Wildcard')], max_length=10)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('frequency', models.IntegerField(default=1)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('matched_competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_learning.competency')),
            ],
            options={
                'unique_together': {('original_name', 'matched_competency')},
            },
        ),
    ]
